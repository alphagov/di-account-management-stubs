AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: "A template to create the GOV.UK One login Account backend infrastructure."

Parameters:
  Environment:
    Description: "The environment type"
    Type: "String"
    AllowedValues:
      - "dev"
      - "build"
    ConstraintDescription: must be dev or build
  VpcStackName:
    Description: >
      The name of the stack that defines the VPC in which this container will
      run.
    Type: String
    Default: vpc-enhanced
  CodeSigningConfigArn:
    Type: String
    Description: >
      The ARN of the Code Signing Config to use, provided by the deployment pipeline
    Default: "none"
  PermissionsBoundary:
    Type: String
    Description: >
      The ARN of the permissions boundary to apply to any role created by the template
    Default: "none"


Conditions:
  UseCodeSigning:
    Fn::Not:
      - Fn::Equals:
          - !Ref CodeSigningConfigArn
          - "none"

  UsePermissionsBoundary:
    Fn::Not:
      - Fn::Equals:
          - !Ref PermissionsBoundary
          - "none"

Globals:
  Function:
    CodeSigningConfigArn: !If
      - UseCodeSigning
      - !Ref CodeSigningConfigArn
      - !Ref AWS::NoValue
    PermissionsBoundary: !If
      - UsePermissionsBoundary
      - !Ref PermissionsBoundary
      - !Ref AWS::NoValue

Resources:
  AccountManagementStubFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - AccountManagementStubFunctionLogGroup
    Properties:
      FunctionName: !Sub ${Environment}-${AWS::StackName}-account-management-api-stub
      Architectures: ["arm64"]
      CodeUri: ../lambda/stubs/account-management-api/
      Handler: account-management-api-stub.handler
      KmsKeyArn: !GetAtt LambdaKMSKey.Arn
      PackageType: Zip
      MemorySize: 128
      ReservedConcurrentExecutions: 5
      Runtime: nodejs18.x
      Role: !GetAtt AccountManagementStubFunctionRole.Arn
      Timeout: 5
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdB
        SecurityGroupIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-AWSServicesEndpointSecurityGroupId
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - account-management-api-stub.ts

  AccountManagementStubFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - "sts:AssumeRole"

  AccountManagementStubApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: AccountManagementStubApi
      ProtocolType: HTTP
      CorsConfiguration:
        AllowOrigins:
          - "*"
        AllowMethods:
          - GET
          - HEAD
          - OPTIONS
          - POST
      Target: !GetAtt AccountManagementStubFunction.Arn

  AccountManagementStubApiPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !Ref AccountManagementStubFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${AccountManagementStubApi}/*"

  AccountManagementStubFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      LogGroupName: !Sub "/aws/lambda/${Environment}-${AWS::StackName}-account-management-api-stub"
      RetentionInDays: 30
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  AccountManagementStubApiEndpoint:
    Type: AWS::SSM::Parameter
    Properties:
      Description: The API Gateway endpoint for the Account Management stub
      Name: !Sub "/${AWS::StackName}/Stub/AccountManagement/Endpoint"
      Type: String
      Value: !GetAtt AccountManagementStubApi.ApiEndpoint

  LambdaKMSKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action:
              - "kms:*"
            Resource:
              - "*"
          - Effect: "Allow"
            Principal:
              Service: "lambda.amazonaws.com"
            Action:
              - "kms:Decrypt"
            Resource: "*"

  LambdaKMSKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}/${Environment}/LambdaKMSKey"
      TargetKeyId: !Ref LambdaKMSKey
